[
  
  {
    "title": "thehive Installation on Google Cloud Platform",
    "url": "/posts/thehive-installation-gcp/",
    "categories": "Installation",
    "tags": "like, comment, subscribe",
    "date": "2025-02-23 00:00:00 +0000",
    





    
    "snippet": "PrerequisitesSystem Requirement:     OS : Ubuntu 22.04 LTS (x86/64, amd64)    Disk Size: 50 GB     # recommended more size as per your requirement     memory: 16 GB    core: 4 vcpu (1 shared core) ...",
    "content": "PrerequisitesSystem Requirement:     OS : Ubuntu 22.04 LTS (x86/64, amd64)    Disk Size: 50 GB     # recommended more size as per your requirement     memory: 16 GB    core: 4 vcpu (1 shared core)    region : us-central1    zone : Any        Instance Name        OS &amp; StorageNetworking : \t- default interface Ipv4 (10.128.0.0/20)\t- Allow http traffic (port 80)\t-  Allow https traffic (port 443)\t- Allow Port 9000 for traffic (thehive server running .................................. )        Network allow traffic        Network interfaceNow Let Create a Instance â€¦â€¦â€¦â€¦â€¦â€¦â€¦â€¦â€¦â€¦â€¦.To enable traffic on port 9000, navigate to the Firewall (VPC Network).Create a firewall rule to allow traffic on port 9000 using the TCP protocol.        Firewall Rule NameSet Target &amp; Source IPv4 Ranges\t- Target : All instances in the network\t-  Source IPv4 ranges : 0.0.0.0/0        Set target and Source Ipv4 Scroll down to Protocol and Ports\t- Check box the TCP protocol\t- write 9000 in Placeholder        Set Protocol &amp; Port 9000 Then Create Firewall rule â€¦â€¦â€¦â€¦â€¦â€¦â€¦â€¦â€¦â€¦â€¦.Letâ€™s now connect to the instance via SSH.To update and upgrade the package repository on a Linux server, use the following commands:# update and upgrade repository for linux serversudo apt update &amp;&amp; sudo apt upgrade -yLet now Install the thehive in server using automate scriptVisit the below link for where you can get reference[Automated Installation Script docs](https://example.com](https://docs.strangebee.com/thehive/installation/automated-installation-script/#using-the-installation-script )# automate script wget -q -O /tmp/install.sh https://archives.strangebee.com/scripts/install.sh ; sudo -v ; bash /tmp/install.shWhen you execute the script, the following output will appear:        Script Execution Type : yesThe next option allows us to install TheHive and Cortex. We will choose option 2.        Script Initilization The installation process will take approximately 5 to 8 minutes to complete.        Proccess Completion Now, letâ€™s access TheHive using the URL provided:URL: http://:9000Refresh the page 1-2 times to ensure the webpage loads properly.        thehive login page The default credentials for logging into TheHive are:  Login: admin@thehive.local  Password: secret        thehive home Page Congratulations! You have successfully set up TheHive. ðŸŽ‰"
  },
  
  {
    "title": "OpenCTI Installation on Google Cloud Platform",
    "url": "/posts/opencti-installation-gcp/",
    "categories": "Installation",
    "tags": "like, comment, subscribe",
    "date": "2025-02-03 00:00:00 +0000",
    





    
    "snippet": "PrerequisitesSystem Requirement: \tOS : Ubuntu 24.04 LTS (x86/64, amd64)\tDisk Size: 30 GB     # recommended more size as per your requirement \tmemory: 16 GB\tcore: 4 vcpu (1 shared core)\tNetworking: ...",
    "content": "PrerequisitesSystem Requirement: \tOS : Ubuntu 24.04 LTS (x86/64, amd64)\tDisk Size: 30 GB     # recommended more size as per your requirement \tmemory: 16 GB\tcore: 4 vcpu (1 shared core)\tNetworking: \t\tAllow port 80 # http traffic\t\tAllow port 8080\t\tAllow port 443 # https trafficAccess SSH Instancesudo ssh -i /path/to/privatekey username@external-ipCreate user and password  for OpenCTI# created user and directory for usernamesudo useradd -m -d /home/opencti opencti# passwd for usersudo passwd opencti # Assign specific shell for usersudo usermod -s /bin/bash opencti# Add user into sudo groups sudo usermod -aG sudo opencti   # For sudo permission# change user su opencti# change directorycd /home/openctiInstall dependenciessudo apt updatesudo apt -y upgradesudo apt-get install -y docker.io docker-composesudo sysctl -w vm.max_map_count=1048575Check the Docker service is running â€¦â€¦.sudo systemctl status docker.servicesudo systemctl start docker.servicesudo systemctl stop docker.serviceClone OPENCTI Repository# check the file name .env.sample, rename it to .env in sample directory where you have clone the repo.sudo cp .env.sample .env# open file .env with nano commandsudo nano .env# Copy content of file and Paste :%%OPENCTI_ADMIN_EMAIL=admin@opencti.ioOPENCTI_ADMIN_PASSWORD=admin@123OPENCTI_ADMIN_TOKEN=b122b5a2-901a-4112-9d50-9f5a2487df7cOPENCTI_BASE_URL=http://&lt;internal-ip&gt;:8080OPENCTI_HEALTHCHECK_ACCESS_KEY=4f1607f3-9c26-416a-afe2-fb4a6632d54fMINIO_ROOT_USER=openctiMINIO_ROOT_PASSWORD=admin@123RABBITMQ_DEFAULT_USER=openctiRABBITMQ_DEFAULT_PASS=admin@123CONNECTOR_EXPORT_FILE_STIX_ID=dd817c8b-abae-460a-9ebc-97b1551e70e6CONNECTOR_EXPORT_FILE_CSV_ID=7ba187fb-fde8-4063-92b5-c3da34060dd7CONNECTOR_EXPORT_FILE_TXT_ID=ca715d9c-bd64-4351-91db-33a8d728a58bCONNECTOR_IMPORT_FILE_STIX_ID=72327164-0b35-482b-b5d6-a5a3f76b845fCONNECTOR_IMPORT_DOCUMENT_ID=c3970f8a-ce4b-4497-a381-20b7256f56f0CONNECTOR_ANALYSIS_ID=4dffd77c-ec11-4abe-bca7-fd997f79fa36SMTP_HOSTNAME=localhostELASTIC_MEMORY_SIZE=4G%%# If yourÂ `docker-compose`Â deployment does not supportÂ `.env`Â files, just export all environment variables before launching the platform:export $(cat .env | grep -v \"#\" | xargs)Run docker compose command to start docker instance# if docker service is  running ..... | skip this stepsudo systemctl start docker.service # Run docker-compose in detachedsudo docker-compose up -dAccess OpenCTI Platform# Open Browser (chrome, firefox)http://&lt;internal-ip or localhost or external-ip&gt;:8080/# Use Login and Password set in .env fileOPENCTI_ADMIN_EMAIL=admin@opencti.io   #change meOPENCTI_ADMIN_PASSWORD=admin@123  #change me"
  },
  
  {
    "title": "OpenBAS Installation on Google Cloud Platform",
    "url": "/posts/openbas-installation-gcp/",
    "categories": "Installation",
    "tags": "like, comment, subscribe",
    "date": "2025-02-03 00:00:00 +0000",
    





    
    "snippet": "PrerequisitesSystem Requirement: \tOS : Ubuntu 24.04 LTS (x86/64, amd64)\tDisk Size: 30 GB     # recommended more size as per your requirement \tmemory: 4 GB\tcore: 2vcpu (1 shared core)\tNetworking: \t\t...",
    "content": "PrerequisitesSystem Requirement: \tOS : Ubuntu 24.04 LTS (x86/64, amd64)\tDisk Size: 30 GB     # recommended more size as per your requirement \tmemory: 4 GB\tcore: 2vcpu (1 shared core)\tNetworking: \t\tAllow port 80 # http traffic\t\tAllow port 8080\t\tAllow port 443 # https trafficAccess SSH Instancesudo ssh -i /path/to/privatekey username@external-ipCreate user and password  for OpenBas# created user and directory for usernamesudo useradd -m -d /home/openbas openbas# passwd for usersudo passwd openbas # Assign specific shell for usersudo usermod -s /bin/bash openbas# Add user into sudo groups sudo usermod -aG sudo openbas   # For sudo permission# change user su openbas# change directorycd /home/openbasInstall dependenciessudo apt updatesudo apt -y upgradesudo apt-get install -y docker.io docker-composesudo sysctl -w vm.max_map_count=1048575Check the Docker service is running â€¦â€¦.sudo systemctl status docker.service  sudo systemctl start docker.servicesudo systemctl stop docker.serviceClone opencti repositorycd /optsudo mkdir -p /opt/openbas &amp;&amp; cd /opt/openbassudo git clone https://github.com/OpenBAS-Platform/docker.gitcd dockerCheck the file name .env.sample#check the file name .env.sample, rename it to .env in sample directory where you have clone the repo.sudo cp .env.sample .env# open file .env with nano commandsudo nano .env# Copy Below content of file and paste in .env file :%%# PostgreSQL ConfigurationPOSTGRES_USER=adminPOSTGRES_PASSWORD=admin@123# MinIO ConfigurationMINIO_ROOT_USER=openbas  #change meMINIO_ROOT_PASSWORD=admin@123 # Should be at least 8 characters  #change me# RabbitMQ ConfigurationRABBITMQ_DEFAULT_USER=openbas  #change meRABBITMQ_DEFAULT_PASS=admin@123 #change me# OpenBAS General ConfigurationKEYSTORE_PASSWORD=admin123   #change meOPENBAS_ADMIN_EMAIL=admin@openbas.io   #change meOPENBAS_ADMIN_PASSWORD=admin@123  #change meOPENBAS_ADMIN_TOKEN=0ed26ea1-f37a-42b9-a931-32b452dcf517 # Should be a valid UUID# Spring Mail ConfigurationSPRING_MAIL_HOST=smtp.gmail.com # smtp hostSPRING_MAIL_PORT=465SPRING_MAIL_USERNAME=email@domain.com # email server domainSPRING_MAIL_PASSWORD=password  # password of email serverSPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH=trueSPRING_MAIL_PROPERTIES_MAIL_SMTP_SSL_ENABLE=trueSPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE=false# OpenBAS IMAP ConfigurationOPENBAS_MAIL_IMAP_ENABLED=trueOPENBAS_MAIL_IMAP_HOST=imap.gmail.com  # imap hostOPENBAS_MAIL_IMAP_PORT=993OPENBAS_MAIL_IMAP_AUTH=trueOPENBAS_MAIL_IMAP_SSL_ENABLE=trueOPENBAS_MAIL_IMAP_STARTTLS_ENABLE=false# Collector MITRE ATT&amp;CK ConfigurationCOLLECTOR_MITRE_ATTACK_ID=46f3afdb-3bd3-4a7b-8125-35a53a940f90 # Replace with a valid UUIDv4# COLLECTOR Atomic Red Team ConfigurationCOLLECTOR_ATOMIC_RED_TEAM_ID=14b69c4e-fc9f-42fc-bbc5-e845b6b063d3 # Replace with a valid UUIDv%% Run docker compose command to start docker instance# if docker service is  running ..... | skip this stepsudo systemctl start docker.service # Run docker-compose in detachedsudo docker-compose up -d# Check for docker instance spawnsudo docker ps -a# If yourÂ `docker-compose`Â deployment does not supportÂ `.env`Â files, just export all environment variables before launching the platform:export $(cat .env | grep -v \"#\" | xargs)Run docker compose command to start docker instance# if docker service is  running ..... | skip this stepsudo systemctl start docker.service # Run docker-compose in detachedsudo docker-compose up -dAccess OpenBAS Platform# Open Browser (chrome, firefox)http://&lt;internal-ip or localhost or external-ip&gt;:8080/# Use Login and Password set in .env fileOPENBAS_ADMIN_EMAIL=admin@openbas.io   #change meOPENBAS_ADMIN_PASSWORD=admin@123  #change me"
  }
  
]

